<!-- category.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Management</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        /* .subcategories {
            margin-left: 20px;
        } */

        ul {
            border: none;
            /* background-color: rgba(0, 0, 0, 0.05); */
            min-height: 2px;
            box-sizing: border-box;
        }

        #sortable {
            padding: 50px;
        }

        li {
            margin-top: 8px;
            margin-left: 8px;
            border: 1px solid rgba(0, 0, 0, .125) !important;
            border-radius: inherit !important;
            background-color: white !important;
        }

        .subcategories li {
            margin-left: 0;
        }

        li:first-child {
            margin-top: 0;
        }

        .editable-input {
            width: auto;
            display: inline-block;
            margin-right: 10px;
        }
    </style>
</head>

<body>
    <div class="container mt-5">
        <h2>Category Management</h2>
        <div class="row">
            <div class="col-md-6">
                <h4>Parent Categories</h4>
                <ul id="sortable" class="list-group">
                    <!-- Parent categories -->
                    <% categories.forEach(parentCategory=> { %>
                        <li class="list-group-item" id="category_<%= parentCategory.id %>">
                            <div class="d-flex justify-content-between align-items-center">
                                <span>

                                    <span class="category-name">
                                        <%= parentCategory.name %>
                                    </span>
                                    <% if (!parentCategory.hasChildren) { %>
                                        <select name="parentId" id="select_<%= parentCategory.id %>"
                                            class="form-control d-none" style="width: auto;">
                                            <option value="">None</option>
                                            <% categories.forEach(otherParentCategory=> { %>
                                                <% if (parentCategory.id !==otherParentCategory.id) { %>
                                                    <option value="<%= otherParentCategory.id %>">
                                                        <%= otherParentCategory.name %>
                                                    </option>
                                                    <% } %>
                                                        <% }) %>
                                        </select>
                                        <% } %>
                                </span>
                                <div>
                                    <!-- Edit icon and functionality -->
                                    <span class="edit-category" data-id="<%= parentCategory.id %>" data-toggle="tooltip"
                                        data-placement="top" title="Edit Category" style="cursor: pointer;"><i
                                            class="bi bi-pencil-square"></i></span>
                                    <!-- Delete icon and functionality -->
                                    <% if (!parentCategory.hasPdfs) { %>
                                        <span class="delete-category ml-2" data-id="<%= parentCategory.id %>"
                                            data-toggle="tooltip" data-placement="top" title="Delete Category"
                                            style="cursor: pointer;"><i class="bi bi-trash"></i></span>
                                        <% } else { %>
                                            <span class="delete-category ml-2 disabled" data-toggle="tooltip"
                                                data-placement="top" title="Contains PDFs, cannot delete"><i
                                                    class="bi bi-trash"></i></span>
                                            <% } %>

                                </div>
                            </div>

                            <!-- Subcategories -->
                            <ul class="subcategories list-group mt-3" id="sortable_<%= parentCategory.id %>">
                                <% parentCategory.children.forEach(subcategory=> { %>
                                    <li class="list-group-item" id="subcategory_<%= subcategory.id %>">
                                        <div class="d-flex justify-content-between align-items-center">

                                            <span class="subcategory-name">
                                                <%= subcategory.name %>
                                            </span>
                                            <div>
                                                <!-- Edit icon and functionality for subcategory -->
                                                <span class="edit-subcategory" data-id="<%= subcategory.id %>"
                                                    data-toggle="tooltip" data-placement="top" title="Edit Subcategory"
                                                    style="cursor: pointer;"><i class="bi bi-pencil-square"></i></span>
                                                <!-- Delete icon and functionality for subcategory -->
                                                <% if (!subcategory.hasPdfs) { %>
                                                    <span class="delete-subcategory ml-2"
                                                        data-id="<%= subcategory.id %>" data-toggle="tooltip"
                                                        data-placement="top" title="Delete Subcategory"
                                                        style="cursor: pointer;"><i class="bi bi-trash"></i></span>
                                                    <% } else { %>
                                                        <span class="delete-subcategory ml-2 disabled"
                                                            data-toggle="tooltip" data-placement="top"
                                                            title="Contains PDFs, cannot delete"><i
                                                                class="bi bi-trash"></i></span>
                                                        <% } %>

                                                            <span class="make-parent ml-2"
                                                                data-id="<%= subcategory.id %>" data-toggle="tooltip"
                                                                data-placement="top" title="Make Parent"><i
                                                                    class="bi bi-arrow-up-square"></i></span>
                                            </div>
                                        </div>
                                    </li>
                                    <% }) %>
                            </ul>
                        </li>
                        <% }) %>
                </ul>
            </div>
            <div class="col-md-6">
                <h4>Add Category</h4>
                <form id="addCategoryForm">
                    <div class="form-group">
                        <label for="categoryName">Category Name</label>
                        <input type="text" class="form-control" id="categoryName" name="name" required>
                    </div>
                    <div class="form-group">
                        <label for="parentCategory">Parent Category (optional)</label>
                        <select class="form-control" id="parentCategory" name="parent_id">
                            <option value="">None</option>
                            <% categories.forEach(category=> { %>
                                <option value="<%= category.id %>">
                                    <%= category.name %>
                                </option>
                                <% }) %>
                        </select>
                    </div>
                    <button type="button" class="btn btn-primary" id="addCategoryBtn">Add Category</button>
                </form>
            </div>
        </div>
    </div>

    <!-- Popover content for delete and make parent functionality -->
    <div id="popover-content" style="display: none;">
        <p>This category contains PDFs and cannot be deleted.</p>
    </div>

    <!-- jQuery and Bootstrap JS for functionality -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function () {

            // Enable tooltips
            $('[data-toggle="tooltip"]').tooltip();

            // Initialize sortable for parent categories
            $("#sortable").sortable({
                connectWith: "#sortable",
                update: function (event, ui) {
                    var parentId = ui.item.attr("id").replace("category_", "");
                    var childId = ui.item.find("li").map(function () {
                        return $(this).attr("id").replace("subcategory_", "");
                    }).get();
                    $.ajax({
                        url: '/category/reorder',
                        type: 'POST',
                        data: { orderedIds: childId, newParentId: parentId },
                        success: function (response) {
                            console.log('Reordered successfully');
                        },
                        error: function (err) {
                            console.error('Error reordering:', err);
                        }
                    });
                }
            });
            $("#sortable").disableSelection();

            // Initialize sortable for each parent category's subcategories
            $('.subcategories').sortable({
                connectWith: '.subcategories',
                update: function (event, ui) {
                    var orderedIds = $(this).sortable("toArray").map(item => item.replace('subcategory_', ''));
                    var newParentId = $(this).closest('.list-group-item').attr('id').replace('category_', '');
                    $.ajax({
                        url: '/category/reorder',
                        type: 'POST',
                        data: { orderedIds: orderedIds, newParentId: newParentId },
                        success: function (response) {
                            console.log('Reordered subcategories successfully');
                        },
                        error: function (err) {
                            console.error('Error reordering subcategories:', err);
                        }
                    });
                }
            });
            $('.subcategories').disableSelection();

            // Handle form submission for adding a category
            $('#addCategoryBtn').click(function () {
                $.ajax({
                    url: '/category/add',
                    type: 'POST',
                    data: $('#addCategoryForm').serialize(),
                    success: function (response) {
                        console.log('Category added successfully');
                        location.reload(); // Refresh page after adding category
                    },
                    error: function (err) {
                        console.error('Error adding category:', err);
                    }
                });
            });

            // Handle editing category name
            $(document).on('click', '.edit-category', function () {
                var categoryId = $(this).data('id');
                var categoryNameElement = $('#category_' + categoryId + ' .category-name');
                var select = $('#select_' + categoryId);
                select.removeClass('d-none');
                select.addClass('d-inline');
                var originalName = categoryNameElement.text().trim();

                let newHTML = '<input type="text" class="editable-input form-control" value="' + originalName + '">'

                categoryNameElement.html(newHTML);
                $(this).html('<i class="bi bi-check-square"></i>');
                $(this).after('<span class="cancel-edit ml-2" style="cursor: pointer;"><i class="bi bi-x-square"></i></span>');
                $('#category_' + categoryId + ' .delete-category').hide();
            });

            // Handle updating category name
            $(document).on('click', '.edit-category i.bi-check-square', function () {
                var categoryId = $(this).closest('li').attr('id').replace('category_', '');
                var newName = $('#category_' + categoryId + ' .editable-input').val().trim();
                var newParentId = $('#select_' + categoryId).val().trim();
                if (newName !== '') {
                    $.ajax({
                        url: '/category/update',
                        type: 'POST',
                        data: { id: categoryId, name: newName, parent_id: newParentId },
                        success: function (response) {
                            console.log('Category updated successfully');
                            location.reload();
                        },
                        error: function (err) {
                            console.error('Error updating category:', err);
                        }
                    });
                }
            });

            // Handle cancel editing of category name
            $(document).on('click', '.cancel-edit', function () {
                location.reload();
            });

            // Handle deleting category
            $(document).on('click', '.delete-category', function () {
                var categoryId = $(this).data('id');
                if (!$(this).hasClass('disabled')) {
                    if (confirm('Are you sure you want to delete this category?')) {
                        $.ajax({
                            url: '/category/delete',
                            type: 'POST',
                            data: { id: categoryId },
                            success: function (response) {
                                console.log('Category deleted successfully');
                                location.reload();
                            },
                            error: function (err) {
                                console.error('Error deleting category:', err);
                            }
                        });
                    }
                } else {
                    $(this).popover({
                        container: 'body',
                        content: 'This category contains PDFs and cannot be deleted.',
                        placement: 'top',
                        trigger: 'focus'
                    });
                    $(this).popover('show');
                }
            });

            // Handle making subcategory a parent category
            $(document).on('click', '.make-parent', function () {
                var subcategoryId = $(this).data('id');
                if (!$(this).hasClass('disabled')) {
                    $.ajax({
                        url: '/category/updateParent',
                        type: 'POST',
                        data: { id: subcategoryId, parentId: null },
                        success: function (response) {
                            console.log('Subcategory made parent successfully');
                            location.reload(); // Refresh page after making parent
                        },
                        error: function (err) {
                            console.error('Error making subcategory parent:', err);
                        }
                    });
                } else {
                    $(this).popover({
                        container: 'body',
                        content: 'This category contains subcategories and cannot be made parent.',
                        placement: 'top',
                        trigger: 'focus'
                    });
                    $(this).popover('show');
                }
            });

            // Handle form submission for updating parent category of subcategory
            $(document).on('click', '.update-parent-btn', function () {
                var subcategoryId = $(this).closest('li').attr('id').replace('subcategory_', '');
                var parentId = $('#updateParentForm_' + subcategoryId + ' select[name="parentId"]').val();
                if (parentId !== '') {
                    $.ajax({
                        url: '/category/updateParent',
                        type: 'POST',
                        data: { id: subcategoryId, parentId: parentId },
                        success: function (response) {
                            console.log('Parent category updated successfully');
                            location.reload(); // Refresh page after updating parent
                        },
                        error: function (err) {
                            console.error('Error updating parent category:', err);
                        }
                    });
                }
            });

            // Handle editing subcategory name
            $(document).on('click', '.edit-subcategory', function () {
                var subcategoryId = $(this).data('id');
                var subcategoryNameElement = $('#subcategory_' + subcategoryId + ' .subcategory-name');
                var originalName = subcategoryNameElement.text().trim();
                subcategoryNameElement.html('<input type="text" class="editable-input form-control" value="' + originalName + '">');
                $(this).html('<i class="bi bi-check-square"></i>');
                $(this).after('<span class="cancel-edit ml-2" style="cursor: pointer;"><i class="bi bi-x-square"></i></span>');
                $('#subcategory_' + subcategoryId + ' .delete-subcategory').hide();
                $('#subcategory_' + subcategoryId + ' .make-parent').hide();
            });

            // Handle updating subcategory name
            $(document).on('click', '.edit-subcategory i.bi-check-square', function () {
                var subcategoryId = $(this).closest('li').attr('id').replace('subcategory_', '');
                var newName = $('#subcategory_' + subcategoryId + ' .editable-input').val().trim();
                if (newName !== '') {
                    $.ajax({
                        url: '/category/update',
                        type: 'POST',
                        data: { id: subcategoryId, name: newName },
                        success: function (response) {
                            console.log('Subcategory updated successfully');
                            location.reload();
                        },
                        error: function (err) {
                            console.error('Error updating subcategory:', err);
                        }
                    });
                }
            });

            // Handle cancel editing of subcategory name
            $(document).on('click', '.cancel-edit', function () {
                var subcategoryId = $(this).closest('li').attr('id').replace('subcategory_', '');
                var originalName = $(this).closest('li').find('.editable-input').val();
                $('#subcategory_' + subcategoryId + ' .subcategory-name').text(originalName);
                $(this).closest('li').find('.edit-subcategory').html('<i class="bi bi-pencil-square"></i>');
                $(this).closest('li').find('.cancel-edit').remove();
                $(this).closest('li').find('.delete-subcategory').show();
                $(this).closest('li').find('.make-parent').show();
            });

            // Handle deleting subcategory
            $(document).on('click', '.delete-subcategory', function () {
                var subcategoryId = $(this).data('id');
                if (!$(this).hasClass('disabled')) {
                    if (confirm('Are you sure you want to delete this subcategory?')) {
                        $.ajax({
                            url: '/category/delete',
                            type: 'POST',
                            data: { id: subcategoryId },
                            success: function (response) {
                                console.log('Subcategory deleted successfully');
                                location.reload();
                            },
                            error: function (err) {
                                console.error('Error deleting subcategory:', err);
                            }
                        });
                    }
                } else {
                    $(this).popover({
                        container: 'body',
                        content: 'This subcategory contains PDFs and cannot be deleted.',
                        placement: 'top',
                        trigger: 'focus'
                    });
                    $(this).popover('show');
                }
            });
        });
    </script>
</body>

</html>